// Given two binary strings a and b, return their sum as a binary string.

public class Solution {
    public string AddBinary(string a, string b) {
        int iL = a.Length - 1;
        int jL = b.Length - 1;

        int reminder = 0;
        Stack myStack = new();
        while (iL >= 0 || jL >= 0)
        {
            char? i = iL < 0 ? null : a[iL];
            char? j = jL < 0 ? null : b[jL];

            switch (i, j)
            {
                case (null, '1'):
                case ('1', null):
                    {
                        myStack.Push(reminder > 0 ? '0' : '1');
                    }
                    break;
                case (null, '0'):
                case ('0', null):
                    {
                        if (reminder > 0)
                        {
                            myStack.Push('1');
                            reminder -= 1;
                        }
                        else
                        {
                            myStack.Push('0');
                        }
                    }
                    break;
                case ('0', '0'):
                    {
                        if (reminder > 0)
                        {
                            myStack.Push('1');
                            reminder -= 1;
                        }
                        else
                        {
                            myStack.Push('0');
                        }
                    }
                    break;
                case ('1', '0'):
                case ('0', '1'):
                    {
                        myStack.Push(reminder > 0 ? '0' : '1');
                    }
                    break;
                case ('1', '1'):
                    {
                        if (reminder > 0)
                        {
                            myStack.Push('1');
                        }
                        else
                        {
                            myStack.Push('0');
                            reminder += 1;
                        }
                    }
                    break;
            }

            iL--;
            jL--;
        }

        if (reminder > 0)
        {
            myStack.Push('1');
        }

        StringBuilder sb = new(); 
        while(myStack.Count > 0)
        {
            sb.Append(myStack.Pop());
        }

        return sb.ToString();
    }
}
